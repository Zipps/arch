#!/bin/bash

# pull config
source ./setup/config

# update system clock
timedatectl set-ntp true

# create boot and root partition


# Create filesystems on your encrypted partitions
mkfs.vfat $BOOT_DRIVE
mkfs.ext4 $ROOT_DRIVE

# mount filesystems
mount $ROOT_DRIVE /mnt
mkdir /mnt/boot
mount $BOOT_DRIVE /mnt/boot

# bootstrapping
pacstrap /mnt 

if [[ $INTEL_MICROCODE ]] then;
	pacstrap /mnt intel-ucode
fi
if [[ $AMD_MICROCODE ]] then;
	pacstrap /mnt amd-ucode
fi

# fstab
genfstab -U /mnt >> /mnt/etc/fstab

# system setup
arch-chroot /mnt
ln -sf $MYLOCALE /etc/localtime
hwclock --systohc

# set root password
echo -en "$ROOT_PASSWORD\n$ROOT_PASSWORD" | passwd

# create user
useradd -m -g wheel -s /bin/bash $USERNAME
echo -en "$USERPW\n$USERPW" | passwd $USERNAME

# config files
sed -i $MYLOCALESED /etc/locale.gen && locale-gen
echo $MYHOSTNAME > /etc/hostname
echo $MYLANG >> /etc/locale.conf
echo $MYLANGUAGE >> /etc/locale.conf
cat /etc/hosts ./config/hosts > /etc/hosts
sed -i -e "s/<MYHOSTNAME>/$MYHOSTNAME/g" /etc/hosts

# setup BOOTLOADER
bootctl --path=/boot install
cp -f ./config/boot /boot/loader/loader.conf
cp -f ./config/arch_boot /boot/loader/entries/arch.conf

if [[ $INTEL_MICROCODE ]] then;
	UCODE_IMAGE="initrd	/intel-ucode.img"
elif [[ $AMD_MICROCODE ]] then;
	UCODE_IMAGE="initrd	/amd-ucode.img"
else
	UCODE_IMAGE=""
fi

sed -i -e "s/<UCODE_IMAGE>/$UCODE_IMAGE/g" /boot/loader/entries/arch
sed -i -e "s/<MAP_DRIVE>/$MAP_DRIVE/g" /boot/loader/entries/arch

# finish and reboot
exit
cp ./post_install /mnt/user/$USERNAME/post_install
cp ./config/config /mnt/user/$USERNAME/config
umount -R /mnt
reboot
